openapi: 3.0.0
info:
  title: GetAccept API
  version: '1.6'
  contact:
    name: GetAccept API
    email: integrations@getaccept.com
    url: 'https://app.getaccept.com/api'
  termsOfService: 'https://www.getaccept.com/terms.html'
  description: |-
    Welcome to GetAccept API! You can use this API to access all our API endpoints.

    The API is organized around REST. All requests should be made over SSL to the servers. All request and response bodies, including errors, are encoded in JSON.

    To authenticate to the API you need to have a valid and active GetAccept account.

    We welcome the study and testing of our API to all GetAccept users but commercial usage is subject to the purchase of a GetAccept API package

    If you need help during the integration or want to learn more about pricing, please don't hesitate to reach out to us using the built-in support-chat on this page at the lower-right corner.

    # Basics
    GetAccept consists of a few concepts that you should know about before starting to use the API.

    ## Entity
    An entity is the top node and all users and corresponding documents are connected to an entity. An entity is often the same as a company, a country or a department in a large organization.

    ## User
    A user is defined by itÂ´s e-mail address and is connected to one or many entities.

    ### User Roles

    #### Administrator:
    - View all documents
    - Edit all documents
    - Change entity settings, info and billing
    - Add new users to the entity
    - Assign entity roles

    #### Manager:
    - View team documents
    - Edit all documents
    - Add new users to the entity

    #### User:
    - View, edit and send any/own documents

    #### Team:
    - Teams consists of users and has no policies connected

    ## Document
    A document is one or multiple uploaded file(s) that is to be sent to one or many recipients created by an user.

    ## Recipients
    Every unique e-mail address (or mobile number) that is connected to a document is a recipient.

    ## Contacts
    All contacts added as a recipient are saved as a contact and is available for later use on that entity.
paths:
  /auth:
    post:
      summary: Authentication by token
      tags:
        - Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Token to be used in consequtive requests using bearer header
                  expires_in:
                    description: Seconds until the access token expires
                    minimum: 0
                    format: int64
                    type: integer
      operationId: post-auth
      description: |-
        Token based authentication is recommended for server-based access or access from clients where OAuth is not suitable. Access tokens has to be requested using an administrators login credentials.
        Requests should include the header Content-Type with value application/json
      parameters: []
      security: []
      requestBody:
        content:
          application/json:
            schema:
              x-examples:
                Example:
                  email: user@example.com
                  password: mysecret
              description: Authentication model
              properties:
                email:
                  type: string
                  format: email
                  description: This is the email of the user in GetAccept
                password:
                  type: string
                  format: password
                  description: This is the password of the user in GetAccept
                entity_id:
                  type: string
                  description: This specifies what entity to select if multiple entities are available for a user. If no value is specified the default entity will be selected.
                  default: ''
                client_id:
                  description: The client id of your app if you received one from our API team
                  type: string
              required:
                - email
                - password
        description: ''
        required: true
  /refresh:
    get:
      summary: Refresh an access token
      tags:
        - Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer
      operationId: get-refresh
      description: You can request a refreshed of the access token before the original token has expired.
  /documents:
    get:
      summary: List documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                    value:
                      type: integer
                    sender_thumb:
                      type: string
                    sender_name:
                      type: string
                    recipients:
                      type: array
                      items:
                        type: object
                        properties:
                          recipient_status:
                            type: string
                          first_name:
                            type: string
                          role:
                            type: string
                          company_name:
                            type: string
                          note:
                            type: string
                          status:
                            type: string
                          company_number:
                            type: string
                          last_name:
                            type: string
                          email:
                            type: string
                          thumb_url:
                            type: string
                          gender:
                            type: string
                    name:
                      type: string
                    is_signing:
                      type: boolean
                    created_at:
                      type: string
                    id:
                      type: string
                    tags:
                      type: string
                    company_name:
                      type: string
                    expiration_date:
                      type: string
                    type:
                      type: string
                    is_private:
                      type: boolean
      operationId: get-documents
      description: Get a list of available documents
      tags:
        - Documents
      parameters:
        - schema:
            type: string
            enum:
              - draft
              - sent
              - viewed
              - reviewed
              - signed
              - rejected
              - recalled
            example: signed
          in: query
          name: filter
          description: Filter list on status
          explode: false
        - schema:
            type: string
            enum:
              - name
              - value
              - created
              - recipient
              - status
              - owner
            example: created
          in: query
          name: sort_by
          description: "How to sort results\t"
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: desc
          in: query
          name: sort_order
          description: "Sort order of results\t"
        - schema:
            type: boolean
            enum:
              - true
              - false
            example: true
          in: query
          name: showteam
          description: "Include documents from team members\t"
        - schema:
            type: boolean
            enum:
              - true
              - false
            example: true
          in: query
          name: showall
          description: Include all documents from entity
        - schema:
            type: string
          in: query
          name: external_id
          description: An external ID is a custom field which can contain a unique record identifier from a system outside of GetAccept
        - schema:
            type: number
            example: 0
            default: 0
          in: query
          name: offset
          description: Start list from record x until limit
        - schema:
            type: number
            example: 100
            default: 100
          in: query
          name: limit
          description: "Number of records to list\t"
    post:
      summary: Create document
      operationId: post-documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      description: |-
        You must create a document to be able to send it to a recipient. When creating a document you can refer to previously uploaded files with file_id or you can choose to create a document and upload the files in on API post. You can only upload ONE file when including a file in the create document POST.

        Use either file_ids parameter to use existing uploaded file(s), file_content to send the document as base64 encoded string or do a multipart post with file parameter.

        All recipients must have either a valid e-mail or a mobile number.

        All events are recorded using requestor IP address. You can override this using header CLIENT_IP containing the end-users public IP address.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_signing_initials:
                  type: boolean
                is_reminder_sending:
                  type: boolean
                is_automatic_sending:
                  type: boolean
                attachments:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      id:
                        type: string
                      require_view:
                        type: boolean
                type:
                  type: string
                is_signing:
                  type: boolean
                is_sms_sending:
                  type: boolean
                file_ids:
                  type: string
                is_signing_forward:
                  type: boolean
                recipients:
                  type: array
                  items:
                    type: object
                    properties:
                      verify_qna_sign:
                        type: boolean
                      verify_qna_question:
                        type: string
                      verify_qna:
                        type: boolean
                      company_name:
                        type: string
                      company_number:
                        type: string
                      verify_qna_open:
                        type: boolean
                      verify_qna_answer:
                        type: string
                      verify_sms_sign:
                        type: boolean
                      verify_eid_type:
                        type: string
                      note:
                        type: string
                      email:
                        type: string
                      mobile:
                        type: string
                      verify_sms:
                        type: boolean
                      verify_sms_open:
                        type: boolean
                      last_name:
                        type: string
                      role:
                        type: string
                      order_num:
                        type: integer
                      verify_eid:
                        type: boolean
                      first_name:
                        type: string
                is_signing_biometric:
                  type: boolean
                expiration_date:
                  type: string
                custom_fields:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      value:
                        type: string
                value:
                  type: integer
                external_id:
                  type: string
                name:
                  type: string
                template_id:
                  type: string
                  x-ms-dynamic-values:
                    operationId: get-templates,
                    value-path: id,
                    value-collection: templates,
                    value-title: name
            examples: {}
        description: ''
      tags:
        - Documents
  /users:
    get:
      summary: List users
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        users:
                          type: string
                        name:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                        status:
                          type: string
                        role:
                          type: string
                        team_name:
                          type: string
                        last_login:
                          type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-users
      description: Fetch a list of active users for the current authenticated entity
  '/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Get user details
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                        phone:
                          type: string
                        mobile:
                          type: string
                        title:
                          type: string
                        note:
                          type: string
                        thumb_url:
                          type: string
                        entity_id:
                          type: string
                        entity_name:
                          type: string
                        language:
                          type: string
                        timezone:
                          type: string
                        app_mode:
                          type: string
                        role:
                          type: string
                        disallow_create:
                          type: boolean
                        status:
                          type: string
                        team_id:
                          type: string
              examples:
                Example:
                  value:
                    user:
                      id: abc456de
                      first_name: John
                      last_name: Doe
                      email: john.doe@company.com
                      phone: ''
                      mobile: ''
                      title: ''
                      note: ''
                      thumb_url: ''
                      entity_id: def345ab
                      entity_name: Demo Company Inc
                      language: en
                      timezone: '+01:00'
                      app_mode: sales
                      role: user
                      disallow_create: false
                      status: active
                      team_id: ''
      operationId: get-users-userId
      description: 'This call will return details of a single user'
  /templates:
    get:
      summary: List templates
      x-ms-visibility: important
      tags:
        - Templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  templates:
                    type: array
                    items:
                      type: object
                      properties:
                        is_private:
                          type: boolean
                        role_count:
                          type: integer
                        thumb_url:
                          type: string
                        video_id:
                          type: string
                        video_thumb_url:
                          type: string
                        user_id:
                          type: string
                        created_at:
                          type: string
                        name:
                          type: string
                        external_editor_type:
                          type: string
                        is_editable:
                          type: boolean
                        tags:
                          type: string
                        id:
                          type: string
                        type:
                          type: string
                        page_count:
                          type: integer
                        field_count:
                          type: integer
                        sender_name:
                          type: string
                        sender_thumb_url:
                          type: string
      operationId: get-templates
      description: 'Receive a list of available document templates. You can add new templates under the Templates-section in GetAccept.'
  '/documents/{documentId}':
    parameters:
      - schema:
          type: string
        name: documentId
        in: path
        required: true
    get:
      summary: Get document details
      tags:
        - Documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      operationId: get-documents-documentId
      description: 'Get document details by specifying a document id.'
  '/documents/{documentId}/send':
    parameters:
      - schema:
          type: string
        name: documentId
        in: path
        required: true
    post:
      summary: Send document
      operationId: post-documents-documentId-send
      x-ms-visibility: important
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      description: |-
        When you send a document via GetAccept, we deliver an email to all recipients, each containing a unique, secured link. This API call triggers the document send action and can only be performed on documents with document_status = draft. The document will be sent to recipients you provided when it was created.

        If document was created using self-sign option it will also be self-signed by the authenticated or specified user before sending.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sender_id:
                  type: string
                  description: Use this to specify the sender user/owner by id to be used for self-signing the document.
                sender_email:
                  type: string
                  format: email
                  description: Use this to specify the sender user/owner by email address to be used for self-signing the document.
      tags:
        - Documents
  '/documents/{documentId}/seal':
    parameters:
      - schema:
          type: string
        name: documentId
        in: path
        required: true
    post:
      summary: Seal document
      operationId: post-documents-documentId-seal
      responses:
        '200':
          description: OK
      description: |-
        If you prefer to send the document manually you can use this method to seal the document. Do not use this method if you send the document automatically or if you use the send document method above.

        This API call triggers the document seal action and can only be performed on documents with document_status = draft. The method will return individual access/signing links for each recipient.

        If document was created using self-sign option it will also be self-signed by the authenticated or specified user before sealing.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sender_id:
                  type: string
                  description: Use this to specify the sender user/owner by id to be used for self-signing the document.
                sender_email:
                  type: string
                  description: Use this to specify the sender user/owner by email address to be used for self-signing the document.
      tags:
        - Documents
  '/documents/{documentId}/recipients':
    parameters:
      - schema:
          type: string
        name: documentId
        in: path
        required: true
    get:
      summary: Get document recipients
      tags:
        - Documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fullname:
                      type: string
                    email:
                      type: string
                    thumb_url:
                      type: string
                    order_num:
                      type: string
                    last_name:
                      type: string
                    status:
                      type: string
                    mobile:
                      type: string
                    id:
                      type: string
                    role:
                      type: string
                    title:
                      type: string
                    gender:
                      type: string
                    document_url:
                      type: string
                    first_name:
                      type: string
                    company_name:
                      type: string
                    company_number:
                      type: string
                    note:
                      type: string
      operationId: get-documents-documentId-recipients
      description: Get a list of recipients for a specific document.
  '/templates/{templateId}/roles':
    parameters:
      - schema:
          type: string
        name: templateId
        in: path
        required: true
    get:
      summary: Get template roles
      tags:
        - Templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        role:
                          type: string
                        role_name:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                        mobile:
                          type: string
                        role_id:
                          type: string
      operationId: get-templates-templateId-roles
      description: Receive a list of roles for a specific template.
  '/templates/{templateId}/fields':
    parameters:
      - schema:
          type: string
        name: templateId
        in: path
        required: true
    get:
      summary: Get template fields
      tags:
        - Templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      type: object
                      properties:
                        field_id:
                          type: string
                        field_type:
                          type: string
                        is_editable:
                          type: boolean
                        company_name:
                          type: string
                        field_left:
                          type: integer
                        field_label:
                          type: string
                        field_value:
                          type: string
                        is_collectable:
                          type: boolean
                        recipient_id:
                          type: integer
                        recipient_name:
                          type: string
                        role_name:
                          type: string
                        field_width:
                          type: integer
                        field_height:
                          type: integer
                        validation_regex:
                          type: string
                        is_required:
                          type: boolean
                        company_number:
                          type: string
                        page_id:
                          type: string
                        field_top:
                          type: integer
                        validation_warning:
                          type: string
      operationId: get-templates-templateId-fields
      description: Receive a list of fields for a specific template.
  /subscriptions:
    get:
      summary: List subscriptions
      tags:
        - Subscriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    subscription_id:
                      type: string
                    status:
                      type: integer
                    event:
                      type: string
                    host:
                      type: string
                    target_url:
                      type: string
                    notification_email:
                      type: string
                    created_at:
                      type: string
                    id:
                      type: string
                    payload:
                      type: string
                    global:
                      type: boolean
      operationId: get-subscriptions
      description: This call will return a list of active subscriptions
    post:
      summary: Create subscription
      operationId: post-subscriptions
      x-ms-visibility: important,
      x-ms-trigger: single,
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      description: |-
        This call will create a new subscription.
        The response will be wrapped in an array even for single object according to REST hook standards.
        Multiple subscriptions can be posted as an array in one request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  description: The event to subscribe to
                  x-ms-visibility: internal
                  enum:
                    - document.created
                    - document.sent
                    - document.viewed
                    - document.signed
                    - document.approved
                    - document.expired
                    - document.rejected
                    - document.downloaded
                    - document.printed
                    - document.forwarded
                    - document.partially_signed
                    - document.commented
                    - document.hardbounced
                    - document.imported
                  example: document.signed
                target_url:
                  type: string
                  description: The URL to post payload to on event
                  x-ms-notification-url: true,
                  x-ms-visibility: internal,
                  example: 'https://abc.x.pipedream.net/'
                host:
                  type: string
                  description: The host name to send the post to
                payload:
                  type: string
                  description: Additional payload data to post
                global:
                  type: boolean
                  description: If the webhook should catch events for all entity users.
                  example: true
                notification_email:
                  type: string
                  example: hostmaster@example.com
                  description: 'If the webhook fails, send a notification to this email instead of the sender'
              required:
                - event
                - target_url
      # openapi 3 callback
      # callbacks:
      #   event:
      #     '{$request.body#/target_url}':
      #       post:
      #         requestBody:
      #           required: true
      #           content:
      #             application/json:
      #               schema:
      #                 type: object
      #                 properties:
      #                   subscription_id:
      #                     type: string
      #                   document:
      #                     type: object
      #                     properties:
      #                       name:
      #                         type: string
      #                       is_selfsign:
      #                         type: boolean
      #                       sign_date:
      #                         type: string
      #                       email_send_subject:
      #                         type: string
      #                       email_send_message:
      #                         type: string
      #                       is_signing:
      #                         type: boolean
      #                       is_signing_order:
      #                         type: boolean
      #                       is_private:
      #                         type: boolean
      #                       is_scheduled_sending:
      #                         type: boolean
      #                       is_reminder_sending:
      #                         type: boolean
      #                       value:
      #                         type: integer
      #                       type:
      #                         type: string
      #                       tags:
      #                         type: string
      #                       is_signing_initials:
      #                         type: boolean
      #                       status:
      #                         type: string
      #                       user_id:
      #                         type: string
      #                       email_send_template_id:
      #                         type: string
      #                       preview_url:
      #                         type: string
      #                       download_url:
      #                         type: string
      #                       expiration_date:
      #                         type: string
      #                       id:
      #                         type: string
      #                       company_id:
      #                         type: string
      #                       is_signing_biometric:
      #                         type: boolean
      #                       scheduled_sending_time:
      #                         type: string
      #                       is_video:
      #                         type: boolean
      #                       external_id:
      #                         type: string
      #                       company_name:
      #                         type: string
      #                       send_date:
      #                         type: string
      #                       video_id:
      #                         type: integer
      #                   entity:
      #                     type: object
      #                     properties:
      #                       email_send_subject:
      #                         type: string
      #                       email_send_message:
      #                         type: string
      #                   payload:
      #                     type: string
      #                   custom_fields:
      #                     type: object
      #                     properties:
      #                       speaker_name:
      #                         type: string
      #                       shoe_size:
      #                         type: string
      #                   event:
      #                     type: string
      #                   event_type:
      #                     type: string
      #                   event_action:
      #                     type: string
      #         responses:
      #           '200':
      #             description: Your server returns this code if it accepts the callback
      tags:
        - Subscriptions
  '/subscriptions/{subscriptionId}':
    parameters:
      - schema:
          type: string
        name: subscriptionId
        in: path
        required: true
    get:
      summary: Get subscription
      tags:
        - Subscriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      operationId: get-subscriptions-subscriptionId
      description: This call will return details of a single subscription
    delete:
      summary: Delete subscription
      operationId: delete-subscriptions-subscriptionId
      responses:
        '204':
          description: No Content
      description: Delete a single subscription.
      tags:
        - Subscriptions
  /users/me:
    get:
      summary: Get current user
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      first_name:
                        type: string
                      last_name:
                        type: string
                      email:
                        type: string
                      entity_name:
                        type: string
                      app_mode:
                        type: string
                      role:
                        type: string
                      id:
                        type: string
                      mobile:
                        type: string
                      language:
                        type: string
                      timezone:
                        type: string
                      phone:
                        type: string
                      note:
                        type: string
                      thumb_url:
                        type: string
                      entity_id:
                        type: string
                      title:
                        type: string
                      status:
                        type: string
                      team_id:
                        type: string
                      disallow_create:
                        type: boolean
                  entities:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        role:
                          type: string
                        plan:
                          type: string
                        plan_title:
                          type: string
      operationId: get-users-me
      description: Receive details and available entities of the current authenticated user
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
  schemas:
    Error:
      type: object
      properties:
        status:
          type: number
        error:
          type: string
        description:
          type: string
      # required:
      #   - code
      #   - message
    Document:
      title: Document
      type: object
      properties:
        expiration_date:
          type: string
        scheduled_sending_time:
          type: string
        is_video:
          type: boolean
        external_editor_type:
          type: string
        is_identify_recipient:
          type: boolean
        send_date:
          type: string
        sender_name:
          type: string
        email_send_template_id:
          type: string
        download_url:
          type: string
        auto_comment_text:
          type: string
        entity_auto_comment_text:
          type: string
        field_count:
          type: integer
        value:
          type: integer
        type:
          type: string
        is_selfsign:
          type: boolean
        is_signing:
          type: boolean
        is_signed:
          type: boolean
        company_name:
          type: string
        thumb_url:
          type: string
        preview_url:
          type: string
        unique_id:
          type: integer
        status:
          type: string
        sender_thumb_url:
          type: string
        email_send_message:
          type: string
        is_scheduled_sending:
          type: boolean
        auto_comment_email:
          type: string
        external_client_id:
          type: string
        external_editor_id:
          type: string
        company_id:
          type: string
        is_signing_initials:
          type: boolean
        email_send_subject:
          type: string
        recipients:
          type: array
          items:
            type: object
            properties:
              last_name:
                type: string
              note:
                type: string
              company_number:
                type: string
              title:
                type: string
              role:
                type: string
              first_name:
                type: string
              gender:
                type: string
              thumb_url:
                type: string
              order_num:
                type: string
              fullname:
                type: string
              email:
                type: string
              mobile:
                type: string
              company_name:
                type: string
              status:
                type: string
        is_private:
          type: boolean
        user_id:
          type: string
        parent_id:
          type: string
        id:
          type: string
        tags:
          type: string
        external_id:
          type: string
        company_number:
          type: string
        company_logo_url:
          type: string
        is_reminder_sending:
          type: boolean
        is_signing_order:
          type: boolean
        is_auto_comment:
          type: boolean
        is_auto_comment_email:
          type: boolean
        name:
          type: string
        is_signing_biometric:
          type: boolean
        is_signing_forward:
          type: boolean
        sign_date:
          type: string
        sender_email:
          type: string
    Subscription:
      title: Subscription
      type: object
      properties:
        status:
          type: integer
        host:
          type: string
        target_url:
          type: string
        payload:
          type: string
        global:
          type: boolean
        notification_email:
          type: string
        id:
          type: string
        subscription_id:
          type: string
        event:
          type: string
        created_at:
          type: string
  securitySchemes:
    oauth2_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://app.getaccept.com/oauth2/authorize'
          tokenUrl: 'https://app.getaccept.com/oauth2/token'
          scopes:
            #read: Grants read access
            #write: Grants write access
            basic: Grants basic access to operations
          refreshUrl: 'https://app.getaccept.com/oauth2/refresh'
      description: 'For testing purpose, use client_id **api** and client_secret **app**'
    BearerAuth:
      type: http
      scheme: bearer
      description: 'Enter your bearer token in the format **bearer &lt;token>**'
      bearerFormat: JWT
security:
  - oauth2_auth:
      - basic
  - BearerAuth: []
tags: 
  - name: Authentication
    description: 'Authentication with the GetAccept API can be made using JWT tokens (JSON Web Tokens) or OAuth 2.0 Authorization Framework http://oauth.net/2/  All requests must be made via HTTPS. All configuration URLs (webhooks, etc) should begin with https:// as well.'
    externalDocs:
      url: https://app.getaccept.com/api/#authentication
  - name: Documents
    description: Everything related to documents
    externalDocs:
      url: https://app.getaccept.com/api/#documents
  - name: Subscriptions
    description: 'To simplify the process of checking a documents status and make it more efficient in an integrated application, you can enable API Webhooks. Enable webhooks as a user with administrator privileges in the Settings | Integration | Webhooks. We support multiple webhooks for one application. Events will be POSTed to your webhook URLs and should be handled by you. A POST must be answered and your endpoint will need to return a 2xx HTTP. Otherwise, the callback will be considered a failure and will be retried later. Retries will be made after 1, 12, 24, and 48 hours. The sender (or notification_email) will receive an email notification after a failed attempt.'
    externalDocs:
      url: https://app.getaccept.com/api/#subscriptions
  - name: Templates
    description: 'GetAccept has extensive support for creating templates in different formats. You can use form fields to receive input data from a recipient or word files to merge custom data into a document.'
    externalDocs:
      url: https://app.getaccept.com/api/#templates
  - name: Users
    description: 'General user methods for creating, listing of users, single user details and statistics and managing existing users.'
    externalDocs:
      url: https://app.getaccept.com/api/#users
servers:
  - url: 'https://api.getaccept.com/v1'
    description: Production endpoint

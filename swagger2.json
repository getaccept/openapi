{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "integrations@getaccept.com",
      "name": "GetAccept API",
      "url": "https://app.getaccept.com/api"
    },
    "description": "Welcome to GetAccept API! You can use this API to access all our API endpoints.\n\nThe API is organized around REST. All requests should be made over SSL to the servers. All request and response bodies, including errors, are encoded in JSON.\n\nTo authenticate to the API you need to have a valid and active GetAccept account.\n\nWe welcome the study and testing of our API to all GetAccept users but commercial usage is subject to the purchase of a GetAccept API package\n\nIf you need help during the integration or want to learn more about pricing, please don't hesitate to reach out to us using the built-in support-chat on this page at the lower-right corner.\n\n# Basics\nGetAccept consists of a few concepts that you should know about before starting to use the API.\n\n## Entity\nAn entity is the top node and all users and corresponding documents are connected to an entity. An entity is often the same as a company, a country or a department in a large organization.\n\n## User\nA user is defined by itÂ´s e-mail address and is connected to one or many entities.\n\n### User Roles\n\n#### Administrator:\n- View all documents\n- Edit all documents\n- Change entity settings, info and billing\n- Add new users to the entity\n- Assign entity roles\n\n#### Manager:\n- View team documents\n- Edit all documents\n- Add new users to the entity\n\n#### User:\n- View, edit and send any/own documents\n\n#### Team:\n- Teams consists of users and has no policies connected\n\n## Document\nA document is one or multiple uploaded file(s) that is to be sent to one or many recipients created by an user.\n\n## Recipients\nEvery unique e-mail address (or mobile number) that is connected to a document is a recipient.\n\n## Contacts\nAll contacts added as a recipient are saved as a contact and is available for later use on that entity.",
    "termsOfService": "https://www.getaccept.com/terms.html",
    "title": "GetAccept API",
    "version": "1.6"
  },
  "host": "api.getaccept.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "Authentication model",
              "properties": {
                "client_id": {
                  "description": "The client id of your app if you received one from our API team",
                  "type": "string"
                },
                "email": {
                  "description": "This is the email of the user in GetAccept",
                  "format": "email",
                  "type": "string"
                },
                "entity_id": {
                  "default": "",
                  "description": "This specifies what entity to select if multiple entities are available for a user. If no value is specified the default entity will be selected.",
                  "type": "string"
                },
                "password": {
                  "description": "This is the password of the user in GetAccept",
                  "format": "password",
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password"
              ],
              "x-examples": {
                "Example": {
                  "email": "user@example.com",
                  "password": "mysecret"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "access_token": {
                  "description": "Token to be used in consequtive requests using bearer header",
                  "type": "string"
                },
                "expires_in": {
                  "description": "Seconds until the access token expires",
                  "format": "int64",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Authentication"
        ],
        "description": "Token based authentication is recommended for server-based access or access from clients where OAuth is not suitable. Access tokens has to be requested using an administrators login credentials.\nRequests should include the header Content-Type with value application/json",
        "operationId": "post-auth",
        "summary": "Authentication by token"
      }
    },
    "/documents": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filter list on status",
            "enum": [
              "draft",
              "sent",
              "viewed",
              "reviewed",
              "signed",
              "rejected",
              "recalled"
            ],
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "description": "How to sort results\t",
            "enum": [
              "name",
              "value",
              "created",
              "recipient",
              "status",
              "owner"
            ],
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "description": "Sort order of results\t",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "sort_order",
            "type": "string"
          },
          {
            "description": "Include documents from team members\t",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "showteam",
            "type": "boolean"
          },
          {
            "description": "Include all documents from entity",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "showall",
            "type": "boolean"
          },
          {
            "description": "An external ID is a custom field which can contain a unique record identifier from a system outside of GetAccept",
            "in": "query",
            "name": "external_id",
            "type": "string"
          },
          {
            "default": 0,
            "description": "Start list from record x until limit",
            "in": "query",
            "name": "offset",
            "type": "number"
          },
          {
            "default": 100,
            "description": "Number of records to list\t",
            "in": "query",
            "name": "limit",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "properties": {
                  "tags": {
                    "type": "string"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "expiration_date": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "is_private": {
                    "type": "boolean"
                  },
                  "is_signing": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "recipients": {
                    "items": {
                      "properties": {
                        "company_name": {
                          "type": "string"
                        },
                        "company_number": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "note": {
                          "type": "string"
                        },
                        "recipient_status": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "thumb_url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "sender_name": {
                    "type": "string"
                  },
                  "sender_thumb": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "Get a list of available documents",
        "operationId": "get-documents",
        "summary": "List documents"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "attachments": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "require_view": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "custom_fields": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "expiration_date": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "file_ids": {
                  "type": "string"
                },
                "is_automatic_sending": {
                  "type": "boolean"
                },
                "is_reminder_sending": {
                  "type": "boolean"
                },
                "is_signing": {
                  "type": "boolean"
                },
                "is_signing_biometric": {
                  "type": "boolean"
                },
                "is_signing_forward": {
                  "type": "boolean"
                },
                "is_signing_initials": {
                  "type": "boolean"
                },
                "is_sms_sending": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "recipients": {
                  "items": {
                    "properties": {
                      "company_name": {
                        "type": "string"
                      },
                      "company_number": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "mobile": {
                        "type": "string"
                      },
                      "note": {
                        "type": "string"
                      },
                      "order_num": {
                        "type": "integer"
                      },
                      "role": {
                        "type": "string"
                      },
                      "verify_eid": {
                        "type": "boolean"
                      },
                      "verify_eid_type": {
                        "type": "string"
                      },
                      "verify_qna": {
                        "type": "boolean"
                      },
                      "verify_qna_answer": {
                        "type": "string"
                      },
                      "verify_qna_open": {
                        "type": "boolean"
                      },
                      "verify_qna_question": {
                        "type": "string"
                      },
                      "verify_qna_sign": {
                        "type": "boolean"
                      },
                      "verify_sms": {
                        "type": "boolean"
                      },
                      "verify_sms_open": {
                        "type": "boolean"
                      },
                      "verify_sms_sign": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "You must create a document to be able to send it to a recipient. When creating a document you can refer to previously uploaded files with file_id or you can choose to create a document and upload the files in on API post. You can only upload ONE file when including a file in the create document POST.\n\nUse either file_ids parameter to use existing uploaded file(s), file_content to send the document as base64 encoded string or do a multipart post with file parameter.\n\nAll recipients must have either a valid e-mail or a mobile number.\n\nAll events are recorded using requestor IP address. You can override this using header CLIENT_IP containing the end-users public IP address.",
        "operationId": "post-documents",
        "summary": "Create document"
      }
    },
    "/documents/{documentId}": {
      "parameters": [
        {
          "in": "path",
          "name": "documentId",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Documents"
        ],
        "operationId": "get-documents-documentId",
        "summary": "Get document details"
      }
    },
    "/documents/{documentId}/recipients": {
      "parameters": [
        {
          "in": "path",
          "name": "documentId",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "properties": {
                  "company_name": {
                    "type": "string"
                  },
                  "company_number": {
                    "type": "string"
                  },
                  "document_url": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "fullname": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "mobile": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  },
                  "order_num": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "thumb_url": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "Get a list of recipients for a specific document.",
        "operationId": "get-documents-documentId-recipients",
        "summary": "Get document recipients"
      }
    },
    "/documents/{documentId}/seal": {
      "parameters": [
        {
          "in": "path",
          "name": "documentId",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "sender_email": {
                  "description": "Use this to specify the sender user/owner by email address to be used for self-signing the document.",
                  "type": "string"
                },
                "sender_id": {
                  "description": "Use this to specify the sender user/owner by id to be used for self-signing the document.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "If you prefer to send the document manually you can use this method to seal the document. Do not use this method if you send the document automatically or if you use the send document method above.\n\nThis API call triggers the document seal action and can only be performed on documents with document_status = draft. The method will return individual access/signing links for each recipient.\n\nIf document was created using self-sign option it will also be self-signed by the authenticated or specified user before sealing.",
        "operationId": "post-documents-documentId-seal",
        "summary": "Seal document"
      }
    },
    "/documents/{documentId}/send": {
      "parameters": [
        {
          "in": "path",
          "name": "documentId",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "sender_email": {
                  "description": "Use this to specify the sender user/owner by email address to be used for self-signing the document.",
                  "format": "email",
                  "type": "string"
                },
                "sender_id": {
                  "description": "Use this to specify the sender user/owner by id to be used for self-signing the document.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "When you send a document via GetAccept, we deliver an email to all recipients, each containing a unique, secured link. This API call triggers the document send action and can only be performed on documents with document_status = draft. The document will be sent to recipients you provided when it was created.\n\nIf document was created using self-sign option it will also be self-signed by the authenticated or specified user before sending.",
        "operationId": "post-documents-documentId-send",
        "summary": "Send document"
      }
    },
    "/refresh": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "expires_in": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "You can request a refreshed of the access token before the original token has expired.",
        "operationId": "get-refresh",
        "summary": "Refresh an access token"
      }
    },
    "/subscriptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "properties": {
                  "host": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "event": {
                    "type": "string"
                  },
                  "global": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "string"
                  },
                  "notification_email": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "string"
                  },
                  "status": {
                    "type": "integer"
                  },
                  "subscription_id": {
                    "type": "string"
                  },
                  "target_url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "This call will return a list of active subscriptions",
        "operationId": "get-subscriptions",
        "summary": "List subscriptions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "host": {
                  "description": "The host name to send the post to",
                  "type": "string"
                },
                "event": {
                  "description": "The event to subscribe to",
                  "enum": [
                    "document.created",
                    "document.sent",
                    "document.viewed",
                    "document.signed",
                    "document.approved",
                    "document.expired",
                    "document.rejected",
                    "document.downloaded",
                    "document.printed",
                    "document.forwarded",
                    "document.partially_signed",
                    "document.commented",
                    "document.hardbounced",
                    "document.imported"
                  ],
                  "example": "document.signed",
                  "type": "string"
                },
                "global": {
                  "description": "If the webhook should catch events for all entity users.",
                  "example": true,
                  "type": "boolean"
                },
                "notification_email": {
                  "description": "If the webhook fails, send a notification to this email instead of the sender",
                  "example": "hostmaster@example.com",
                  "type": "string"
                },
                "payload": {
                  "description": "Additional payload data to post",
                  "type": "string"
                },
                "target_url": {
                  "description": "The URL to post payload to on event",
                  "example": "https://abc.x.pipedream.net/",
                  "type": "string"
                }
              },
              "required": [
                "event",
                "target_url"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "This call will create a new subscription.\nThe response will be wrapped in an array even for single object according to REST hook standards.\nMultiple subscriptions can be posted as an array in one request.",
        "operationId": "post-subscriptions",
        "summary": "Create subscription"
      }
    },
    "/subscriptions/{subscriptionId}": {
      "parameters": [
        {
          "in": "path",
          "name": "subscriptionId",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Delete a single subscription.",
        "operationId": "delete-subscriptions-subscriptionId",
        "summary": "Delete subscription"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "This call will return details of a single subscription",
        "operationId": "get-subscriptions-subscriptionId",
        "summary": "Get subscription"
      }
    },
    "/templates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "templates": {
                  "items": {
                    "properties": {
                      "tags": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "external_editor_type": {
                        "type": "string"
                      },
                      "field_count": {
                        "type": "integer"
                      },
                      "id": {
                        "type": "string"
                      },
                      "is_editable": {
                        "type": "boolean"
                      },
                      "is_private": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "page_count": {
                        "type": "integer"
                      },
                      "role_count": {
                        "type": "integer"
                      },
                      "sender_name": {
                        "type": "string"
                      },
                      "sender_thumb_url": {
                        "type": "string"
                      },
                      "thumb_url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "video_id": {
                        "type": "string"
                      },
                      "video_thumb_url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Templates"
        ],
        "description": "Receive a list of available document templates. You can add new templates under the Templates-section in GetAccept.",
        "operationId": "get-templates",
        "summary": "List templates"
      }
    },
    "/templates/{templateId}/fields": {
      "parameters": [
        {
          "in": "path",
          "name": "templateId",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "fields": {
                  "items": {
                    "properties": {
                      "company_name": {
                        "type": "string"
                      },
                      "company_number": {
                        "type": "string"
                      },
                      "field_height": {
                        "type": "integer"
                      },
                      "field_id": {
                        "type": "string"
                      },
                      "field_label": {
                        "type": "string"
                      },
                      "field_left": {
                        "type": "integer"
                      },
                      "field_top": {
                        "type": "integer"
                      },
                      "field_type": {
                        "type": "string"
                      },
                      "field_value": {
                        "type": "string"
                      },
                      "field_width": {
                        "type": "integer"
                      },
                      "is_collectable": {
                        "type": "boolean"
                      },
                      "is_editable": {
                        "type": "boolean"
                      },
                      "is_required": {
                        "type": "boolean"
                      },
                      "page_id": {
                        "type": "string"
                      },
                      "recipient_id": {
                        "type": "integer"
                      },
                      "recipient_name": {
                        "type": "string"
                      },
                      "role_name": {
                        "type": "string"
                      },
                      "validation_regex": {
                        "type": "string"
                      },
                      "validation_warning": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Templates"
        ],
        "description": "Receive a list of fields for a specific template.",
        "operationId": "get-templates-templateId-fields",
        "summary": "Get template fields"
      }
    },
    "/templates/{templateId}/roles": {
      "parameters": [
        {
          "in": "path",
          "name": "templateId",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "roles": {
                  "items": {
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "mobile": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "role_id": {
                        "type": "string"
                      },
                      "role_name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Templates"
        ],
        "description": "Receive a list of roles for a specific template.",
        "operationId": "get-templates-templateId-roles",
        "summary": "Get template roles"
      }
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "users": {
                  "items": {
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_login": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "team_name": {
                        "type": "string"
                      },
                      "users": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Fetch a list of active users for the current authenticated entity",
        "operationId": "get-users",
        "summary": "List users"
      }
    },
    "/users/me": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "entities": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "plan": {
                        "type": "string"
                      },
                      "plan_title": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "app_mode": {
                      "type": "string"
                    },
                    "disallow_create": {
                      "type": "boolean"
                    },
                    "email": {
                      "type": "string"
                    },
                    "entity_id": {
                      "type": "string"
                    },
                    "entity_name": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "language": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "mobile": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "team_id": {
                      "type": "string"
                    },
                    "thumb_url": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Receive details and available entities of the current authenticated user",
        "operationId": "get-users-me",
        "summary": "Get current user"
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "user": {
                  "items": {
                    "properties": {
                      "app_mode": {
                        "type": "string"
                      },
                      "disallow_create": {
                        "type": "boolean"
                      },
                      "email": {
                        "type": "string"
                      },
                      "entity_id": {
                        "type": "string"
                      },
                      "entity_name": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "mobile": {
                        "type": "string"
                      },
                      "note": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "team_id": {
                        "type": "string"
                      },
                      "thumb_url": {
                        "type": "string"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "get-users-userId",
        "summary": "Get user details"
      }
    }
  },
  "definitions": {
    "Document": {
      "properties": {
        "tags": {
          "type": "string"
        },
        "auto_comment_email": {
          "type": "string"
        },
        "auto_comment_text": {
          "type": "string"
        },
        "company_id": {
          "type": "string"
        },
        "company_logo_url": {
          "type": "string"
        },
        "company_name": {
          "type": "string"
        },
        "company_number": {
          "type": "string"
        },
        "download_url": {
          "type": "string"
        },
        "email_send_message": {
          "type": "string"
        },
        "email_send_subject": {
          "type": "string"
        },
        "email_send_template_id": {
          "type": "string"
        },
        "entity_auto_comment_text": {
          "type": "string"
        },
        "expiration_date": {
          "type": "string"
        },
        "external_client_id": {
          "type": "string"
        },
        "external_editor_id": {
          "type": "string"
        },
        "external_editor_type": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "field_count": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_auto_comment": {
          "type": "boolean"
        },
        "is_auto_comment_email": {
          "type": "boolean"
        },
        "is_identify_recipient": {
          "type": "boolean"
        },
        "is_private": {
          "type": "boolean"
        },
        "is_reminder_sending": {
          "type": "boolean"
        },
        "is_scheduled_sending": {
          "type": "boolean"
        },
        "is_selfsign": {
          "type": "boolean"
        },
        "is_signed": {
          "type": "boolean"
        },
        "is_signing": {
          "type": "boolean"
        },
        "is_signing_biometric": {
          "type": "boolean"
        },
        "is_signing_forward": {
          "type": "boolean"
        },
        "is_signing_initials": {
          "type": "boolean"
        },
        "is_signing_order": {
          "type": "boolean"
        },
        "is_video": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "preview_url": {
          "type": "string"
        },
        "recipients": {
          "items": {
            "properties": {
              "company_name": {
                "type": "string"
              },
              "company_number": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "fullname": {
                "type": "string"
              },
              "gender": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              },
              "note": {
                "type": "string"
              },
              "order_num": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "thumb_url": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "scheduled_sending_time": {
          "type": "string"
        },
        "send_date": {
          "type": "string"
        },
        "sender_email": {
          "type": "string"
        },
        "sender_name": {
          "type": "string"
        },
        "sender_thumb_url": {
          "type": "string"
        },
        "sign_date": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "thumb_url": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "unique_id": {
          "type": "integer"
        },
        "user_id": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      },
      "title": "Document",
      "type": "object"
    },
    "Error": {
      "properties": {
        "description": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "status": {
          "type": "number"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "type": "object"
    },
    "Subscription": {
      "properties": {
        "host": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "global": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "notification_email": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "subscription_id": {
          "type": "string"
        },
        "target_url": {
          "type": "string"
        }
      },
      "title": "Subscription",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "description": "Enter your bearer token in the format **bearer &lt;token>**",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    },
    "OAuth2": {
      "authorizationUrl": "https://app.getaccept.com/oauth2/authorize",
      "description": "For testing purpose, use client_id **api** and client_secret **app**",
      "flow": "accessCode",
      "scopes": {
        "basic": "Grants basic access to operations"
      },
      "tokenUrl": "https://app.getaccept.com/oauth2/token",
      "type": "oauth2"
    }
  },
  "security": [
    {
      "BearerAuth": []
    },
    {
      "OAuth2": [
        "basic"
      ]
    }
  ],
  "tags": [],
  "x-components": {
    "responses": {
      "NotFound": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "The specified resource was not found"
      },
      "Unauthorized": {
        "description": "Unauthorized"
      }
    }
  }
}